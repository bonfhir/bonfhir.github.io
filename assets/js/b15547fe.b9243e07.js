"use strict";(self.webpackChunk_bonfhir_docs=self.webpackChunk_bonfhir_docs||[]).push([[367],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),h=i,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||r;return n?a.createElement(d,o(o({ref:t},p),{},{components:n})):a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3896:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:1},o="Contributing",l={unversionedId:"contributing",id:"contributing",title:"Contributing",description:"Bonfhir is open to all contributions in order to enrich the ecosystem!",source:"@site/contributing/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/contributing/contributing",draft:!1,editUrl:"https://github.com/bonfhir/bonfhir/tree/main/packages/docs/contributing/contributing.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Code generation",permalink:"/contributing/codegen"}},s={},c=[{value:"Running locally",id:"running-locally",level:2},{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Open the solution",id:"open-the-solution",level:3},{value:"Organization",id:"organization",level:3},{value:"Conventional commits",id:"conventional-commits",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"contributing"},"Contributing"),(0,i.kt)("p",null,"Bonfhir is open to all contributions in order to enrich the ecosystem!"),(0,i.kt)("p",null,"You can contribute in different ways:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bonfhir.dev"},"enrich / fix this documentation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bonfhir/bonfhir/labels/bug"},"submit and fix bugs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bonfhir/bonfhir/discussions/categories/ideas"},"submit feature requests and new ideas")),(0,i.kt)("li",{parentName:"ul"},"submit brand new packages to add new features")),(0,i.kt)("p",null,"Please do not hesitate to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bonfhir/bonfhir/discussions"},"reach out and discuss your contributions")," before starting any work!"),(0,i.kt)("p",null,"Please make sure that your contributions align with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/orientations"},"project orientations"),"."),(0,i.kt)("h2",{id:"running-locally"},"Running locally"),(0,i.kt)("p",null,"All Bonfhir packages are running in a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bonfhir/bonfhir"},"monorepo"),".\nThis is how you can setup your local development environment."),(0,i.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("p",null,"The solution is configured to run in a ",(0,i.kt)("a",{parentName:"p",href:"https://containers.dev/"},"Development Container"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," up and running",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/docs/devcontainers/containers#_system-requirements"},"See this page")," for more precise requirements on Docker"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/download"},"Visual Studio Code")," installed"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"},"VS Code Dev Containers extension")," is installed")),(0,i.kt)("h3",{id:"open-the-solution"},"Open the solution"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Clone the repo: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/bonfhir/bonfhir"},"https://github.com/bonfhir/bonfhir")),(0,i.kt)("li",{parentName:"ul"},"Open in Visual Studio Code and run the ",(0,i.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/docs/devcontainers/containers#_quick-start-open-an-existing-folder-in-a-container"},(0,i.kt)("inlineCode",{parentName:"a"},"Dev Containers: Open Folder in Container..."))," command")),(0,i.kt)("p",null,"Verify that this is working properly by running the following commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"node \u279c /workspace (main \u2714) $ yarn build\n\nnode \u279c /workspace (main \u2714) $ yarn checks\n\nnode \u279c /workspace (main \u2714) $ yarn test\n")),(0,i.kt)("h3",{id:"organization"},"Organization"),(0,i.kt)("p",null,"The monorepo uses ",(0,i.kt)("a",{parentName:"p",href:"https://lerna.js.org/"},"lerna")," and ",(0,i.kt)("a",{parentName:"p",href:"https://yarnpkg.com/features/workspaces"},"yarn workspaces"),"."),(0,i.kt)("p",null,"Individual packages can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bonfhir/bonfhir/tree/main/packages"},"packages")," directory."),(0,i.kt)("p",null,"Each package should expose a list of standard ",(0,i.kt)("a",{parentName:"p",href:"https://yarnpkg.com/configuration/manifest/#scripts"},"scripts"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn build"),": Create a production build of the code"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn check"),": Run quality checks: ",(0,i.kt)("a",{parentName:"li",href:"https://prettier.io/"},"Prettier"),", ",(0,i.kt)("a",{parentName:"li",href:"https://eslint.org/"},"ESLint")," and ",(0,i.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html#using-the-cli"},"type checking")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn clean"),": Clean artifacts related to the build process; may be invoked automatically by the ",(0,i.kt)("inlineCode",{parentName:"li"},"build")," script"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn codegen"),": Run the ",(0,i.kt)("a",{parentName:"li",href:"codegen"},"code generation")," on the package source files, to generate source code"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn format"),": Automatically format the code (using Prettier & ESLint); if you use the devcontainer this should be done automatically by VSCode"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn package:create"),": Package the build to create a local NPM package"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn package:publish"),": Package the build and publish to the NPM registry"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn test"),": Run automated tests")),(0,i.kt)("h3",{id:"conventional-commits"},"Conventional commits"),(0,i.kt)("p",null,"This project adopts the ",(0,i.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional Commits")," approach to git commit\nmessages."),(0,i.kt)("p",null,"This is enforced locally with the usage of ",(0,i.kt)("a",{parentName:"p",href:"https://commitlint.js.org/#/"},"commitlint"),".\nIf the commit does not conform with the conventional commit spec, it will be rejected."),(0,i.kt)("p",null,"This is important as the release process leverages the commit messages to create a changelog for each packages\n(using ",(0,i.kt)("a",{parentName:"p",href:"https://lerna.js.org/"},"lerna"),"). The scope is used to filter which commit belongs to which package."),(0,i.kt)("p",null,"The development approach follows this process:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"isolate changes made to packages into different commits; when committing, follow the\n",(0,i.kt)("a",{parentName:"li",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional Commits")," conventions, and ensure the scope is the\ncorrect package name"),(0,i.kt)("li",{parentName:"ul"},"when committing locally, you can either use ",(0,i.kt)("inlineCode",{parentName:"li"},"yarn commit")," at the root of the repo (which triggers a commitlint wizard),\nor use the ",(0,i.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits"},"VS Code Conventional Commits"),"\nextension that is installed by default in the ",(0,i.kt)("a",{parentName:"li",href:"#pre-requisites"},"devcontainer"))),(0,i.kt)("p",null,"Submit a PR, and follow the PR template.\nReviewing commits is part of the work of the reviewer, and you may get asked to update your commit messages.\nIf this is the case, just use ",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase --interactive")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"git reset")," locally, and force push the updates to the\nremote branch."),(0,i.kt)("p",null,"Once the PR has been approved, simply merge and accept the default merge message\nprovided by GitHub."))}u.isMDXComponent=!0}}]);