"use strict";(self.webpackChunk_bonfhir_docs=self.webpackChunk_bonfhir_docs||[]).push([[367],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3896:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1},o="Contributing",l={unversionedId:"contributing",id:"contributing",title:"Contributing",description:"Bonfhir is open to all contributions in order to enrich the ecosystem!",source:"@site/contributing/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/contributing/contributing",draft:!1,editUrl:"https://github.com/bonfhir/bonfhir/tree/main/packages/docs/contributing/contributing.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Code generation",permalink:"/contributing/codegen"}},s={},u=[{value:"Running locally",id:"running-locally",level:2},{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Open the solution",id:"open-the-solution",level:3},{value:"Organization",id:"organization",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contributing"},"Contributing"),(0,a.kt)("p",null,"Bonfhir is open to all contributions in order to enrich the ecosystem!"),(0,a.kt)("p",null,"You can contribute in different ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://bonfhir.dev"},"enrich / fix this documentation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bonfhir/bonfhir/labels/bug"},"submit and fix bugs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bonfhir/bonfhir/discussions/categories/ideas"},"submit feature requests and new ideas")),(0,a.kt)("li",{parentName:"ul"},"submit brand new packages to add new features")),(0,a.kt)("p",null,"Please do not hesitate to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bonfhir/bonfhir/discussions"},"reach out and discuss your contributions")," before starting any work!"),(0,a.kt)("p",null,"Please make sure that your contributions align with the ",(0,a.kt)("a",{parentName:"p",href:"/docs/orientations"},"project orientations"),"."),(0,a.kt)("h2",{id:"running-locally"},"Running locally"),(0,a.kt)("p",null,"All Bonfhir packages are running in a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bonfhir/bonfhir"},"monorepo"),".\nThis is how you can setup your local development environment."),(0,a.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,a.kt)("p",null,"The solution is configured to run in a ",(0,a.kt)("a",{parentName:"p",href:"https://containers.dev/"},"Development Container"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," up and running",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/docs/devcontainers/containers#_system-requirements"},"See this page")," for more precise requirements on Docker"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/download"},"Visual Studio Code")," installed"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"},"VS Code Dev Containers extension")," is installed")),(0,a.kt)("h3",{id:"open-the-solution"},"Open the solution"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Clone the repo: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bonfhir/bonfhir"},"https://github.com/bonfhir/bonfhir")),(0,a.kt)("li",{parentName:"ul"},"Open in Visual Studio Code and run the ",(0,a.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/docs/devcontainers/containers#_quick-start-open-an-existing-folder-in-a-container"},(0,a.kt)("inlineCode",{parentName:"a"},"Dev Containers: Open Folder in Container..."))," command")),(0,a.kt)("p",null,"Verify that this is working properly by running the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"node \u279c /workspace (main \u2714) $ yarn build\n\nnode \u279c /workspace (main \u2714) $ yarn checks\n\nnode \u279c /workspace (main \u2714) $ yarn test\n")),(0,a.kt)("h3",{id:"organization"},"Organization"),(0,a.kt)("p",null,"The monorepo uses ",(0,a.kt)("a",{parentName:"p",href:"https://lerna.js.org/"},"lerna")," and ",(0,a.kt)("a",{parentName:"p",href:"https://yarnpkg.com/features/workspaces"},"yarn workspaces"),"."),(0,a.kt)("p",null,"Individual packages can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bonfhir/bonfhir/tree/main/packages"},"packages")," directory."),(0,a.kt)("p",null,"Each package should expose a list of standard ",(0,a.kt)("a",{parentName:"p",href:"https://yarnpkg.com/configuration/manifest/#scripts"},"scripts"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn build"),": Create a production build of the code"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn check"),": Run quality checks: ",(0,a.kt)("a",{parentName:"li",href:"https://prettier.io/"},"Prettier"),", ",(0,a.kt)("a",{parentName:"li",href:"https://eslint.org/"},"ESLint")," and ",(0,a.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html#using-the-cli"},"type checking")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn clean"),": Clean artifacts related to the build process; may be invoked automatically by the ",(0,a.kt)("inlineCode",{parentName:"li"},"build")," script"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn codegen"),": Run the ",(0,a.kt)("a",{parentName:"li",href:"codegen"},"code generation")," on the package source files, to generate source code"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn format"),": Automatically format the code (using Prettier & ESLint); if you use the devcontainer this should be done automatically by VSCode"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn package:create"),": Package the build to create a local NPM package"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn package:publish"),": Package the build and publish to the NPM registry"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn test"),": Run automated tests")))}c.isMDXComponent=!0}}]);